resources:
- name: gsp-pr
  type: pull-request
  source:
    access_token: ((re-autom8-ci-pr-build-status-github-token))
    repository: alphagov/gsp
  check_every: 1m
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
jobs:
- name: check-pr-author-and-commit-signature-match
  public: true
  serial: true
  plan:
  - get: gsp-pr
    trigger: true
    version: every
  - put: gsp-pr
    params:
      path: gsp-pr
      status: pending
  - task: check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: govsvc/task-toolbox
      params:
        GITHUB_TOKEN: ((re-autom8-ci-pr-build-status-github-token))
      run:
        path: bash
        args:
        - -ec
        - |
          #!/bin/bash

          function build_query() {
          {
            local org=$1
            local repo=$2
            local commit_sha=$3

            cat <<EOF
          query {
            repository(owner: \"${org}\", name: \"${repo}\") {
              object(oid: \"${commit_sha}\") {
                ... on Commit {
                  oid
                  associatedPullRequests(first: 1) {
                    nodes {
                      author {
                        login
                      }
                      commits(last: 1) {
                        nodes {
                          commit {
                            signature {
                              ... on GpgSignature {
                                signer {
                                  login
                                }
                                keyId
                                isValid
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          EOF
          } | tr -d '\n'
          }

          commit_sha=$(git rev-parse HEAD)
          api_response=$(curl --header 'Content-Type: application/json' --header "Authorization: bearer ${GITHUB_TOKEN}" --data "{ \"query\": \"$(build_query "alphagov" "gsp" "${commit_sha}")\"}" "https://api.github.com/graphql")

          echo "$(build_query "alphagov" "gsp" "${commit_sha}")"
          echo $commit_sha
          echo $api_response

          pr_author=$(echo $api_response | jq ".data.repository.object.associatedPullRequests.nodes[].author.login")
          commit_signature_author=$(echo $api_response | jq ".data.repository.object.associatedPullRequests.nodes[].commits.nodes[0].commit.signature.signer.login")

          if [ $pr_author == $commit_signature_author ]; then
            echo "OK: PR author matches commit signature author."
          else
            echo "ERROR: PR author ($pr_author) doesn't match commit signature author ($commit_signature_author)."
            exit 1
          fi
        dir: repo
      inputs:
      - name: gsp-pr
        path: repo
    timeout: 15m
  on_failure:
    put: gsp-pr
    params:
      path: gsp-pr
      status: failure
  on_success:
    put: gsp-pr
    params:
      path: gsp-pr
      status: success
