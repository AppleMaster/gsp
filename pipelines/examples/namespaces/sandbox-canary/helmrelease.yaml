---
apiVersion: concourse.k8s.io/v1beta1
kind: Pipeline
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: deploy
spec:
  exposed: true
  pipelineString: |

    github_source: &github_source

    task_toolbox: &task_toolbox
      type: docker-image
      source:
        repository: govsvc/task-toolbox
        tag: "1.2.0"

    resources:

    - name: src
      type: git
      source:
        uri: "{{ .Values.global.canary.repository }}"
        branch: master

    jobs:

    - name: deploy
      serial: true
      plan:

      - get: src
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: src
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            RELEASE_NAME: canary
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
          run:
            path: /bin/bash
            args:
            - -eu
            - -c
            - |
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "fqdn=gsp-canary.${CLUSTER_DOMAIN}" \
                --set "annotations[iam.amazonaws.com/role]={{ .Values.global.roles.canary }}" \
                --set "updater.helmChartRepoUrl={{ .Values.global.canary.repository }}" \
                --output-dir "./manifests/" \
                ./src/charts/gsp-canary

      - task: deploy-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
          run:
            path: /bin/bash
            args:
            - -eu
            - -c
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kubectl -n "${RELEASE_NAMESPACE}" apply -R -f ./manifests

