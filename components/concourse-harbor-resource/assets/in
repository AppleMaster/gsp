#!/bin/bash

set -eu

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

context="${1}"

if [ -z "${context}" ]; then
	echo "usage: $0 <path/to/context>"
	exit 1
fi

# add jq into our path
PATH="/usr/local/bin:${PATH}"

payload=$(mktemp /tmp/resource-in.XXXXXX)

cat > "${payload}" <&0

cd "${context}"

username=$(jq -r '.source.username // ""' < "${payload}")
password=$(jq -r '.source.password // ""' < "${payload}")

harbor_enable_content_trust=$(jq -r '.source.harbor.enable_content_trust // "false"' < "${payload}")

if [[ "${harbor_enable_content_trust}" == "true" ]]; then
	notary_url=$(jq -r '.source.notary.url // ""' < "${payload}")
	NOTARY_AUTH=$(echo -n "${username}:${password}" | base64)
	export NOTARY_AUTH
	export DOCKER_CONTENT_TRUST_SERVER="${notary_url}"
	export DOCKER_CONTENT_TRUST=1
fi

echo "  =====> moving on to docker-image-resource"

# Revert concourse weirdness
exec 1>&3

/opt/resource/in.origin "${context}" < "${payload}"
