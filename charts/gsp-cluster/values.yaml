adminRoleARNs: []
adminUserARNs: []
sreRoleARNs: []
sreUserARNs: []

kiam:
  nameOverride:
  fullnameOverride:
  server:
    tlsSecret: kiam-server-tls
    tlsCerts:
      certFileName: server.pem
      keyFileName: server-key.pem
      caFileName: ca.pem
    nodeSelector:
      node-role.kubernetes.io/cluster-management: ""
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/cluster-management
    log:
      level: debug
    probes:
      serverAddress: 127.0.0.1
    extraHostPathMounts:
      - name: ssl-certs
        mountPath: /etc/ssl/certs/ca-certificates.crt
        hostPath: /etc/pki/tls/certs/ca-bundle.crt
        readOnly: true
  agent:
    gatewayTimeoutCreation: 30s
    host:
      iptables: true
    tlsSecret: kiam-agent-tls
    tlsCerts:
      certFileName: agent.pem
      keyFileName: agent-key.pem
      caFileName: ca.pem
    log:
      level: debug
    tolerations:
    - key: node-role.kubernetes.io/ci
      effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
prometheus-operator:
  defaultRules:
    rules:
      general: false # see templates/general.rules.yaml for replacement
      alertmanager: false
  prometheus:
    prometheusSpec:
      retention: "60d"
      ruleSelectorNilUsesHelmValues: false
      ruleSelector: {}
      serviceMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelector: {}
      additionalAlertManagerConfigs:
      - static_configs:
        - targets:
          - "alerts-1.monitoring.gds-reliability.engineering"
          - "alerts-2.monitoring.gds-reliability.engineering"
          - "alerts-3.monitoring.gds-reliability.engineering"
        scheme: https
  grafana:
    adminPassword: "password"
  kubelet:
     serviceMonitor:
       https: true
  alertmanager:
    enabled: false

fluentd-cloudwatch:
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 512Mi
  image:
    tag: v1.3.2-debian-cloudwatch  # More recent image needed for fluentd-kubernetes-daemonset to avoid utf-8 encoding errors
  rbac:
    create: true
  awsRegion: eu-west-2
  extraVars:
    - "{ name: FLUENT_UID, value: '0' }"  # run fluentd as root as instructed by https://github.com/helm/charts/tree/master/incubator/fluentd-cloudwatch
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule

concourse:
  web:
    nameOverride: concourse-web
    additionalVolumes:
    - name: ci-web-configuration
      configMap:
        name: gsp-concourse
    additionalVolumeMounts:
    - name: ci-web-configuration
      mountPath: /web-configuration
  monitor:
    create: true
  worker:
    nameOverride: concourse-worker
    replicas: 2
    ephemeral: true
    hardAntiAffinity: true
    resources: {}
    nodeSelector:
      node-role.kubernetes.io/ci: ""
    tolerations:
      - key: "node-role.kubernetes.io/ci"
        operator: Exists
        effect: NoSchedule
    env:
    - name: CONCOURSE_GARDEN_DNS_PROXY_ENABLE
      value: "false"
    - name: CONCOURSE_WORKER_GARDEN_DNS_PROXY_ENABLE
      value: "false"
  secrets:
    localUsers: admin:password
  concourse:
    web:
      auth:
        mainTeam:
          localUser: admin
      kubernetes:
        createTeamNamespaces: false
      service:
        type: ClusterIP
      prometheus:
        enabled: true
  persistence:
    worker:
      size: 64Gi

pipelineOperator:
  service:
    port: 443
  serviceAccountName: pipeline-operator-service-account
  image:
    repository: "govsvc/gsp-concourse-pipeline-controller"
    tag: "0.0.1554228115"
  concourseUsername: admin
  concoursePassword: password
  concourseInsecureSkipVerify: "false"

harbor:
  logLevel: warn
  expose:
    tls:
      secretName: harbor-registry-certificates
      notarySecretName: harbor-notary-certificates
    ingress:
      annotations:
        kubernetes.io/tls-acme: "true"
  nginx:
    image:
      tag: v1.7.1
  portal:
    image:
      tag: v1.7.1
  core:
    image:
      tag: v1.7.1
  adminserver:
    image:
      tag: v1.7.1
  jobservice:
    image:
      tag: v1.7.1
  registry:
    registry:
      image:
        tag: v2.6.2-v1.7.1
    controller:
      image:
        tag: v1.7.1
  chartmuseum:
    image:
      tag: v0.7.1-v1.7.1
  clair:
    image:
      tag: v2.0.7-v1.7.1
  notary:
    server:
      image:
        tag: v0.6.1-v1.7.1
    signer:
      image:
        tag: v0.6.1-v1.7.1
  database:
    internal:
      image:
        tag: v1.7.1
  redis:
    internal:
      image:
        tag: v1.7.1
